// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: quantos/pkg/v1/bank.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TxStatus int32

const (
	TxStatus_Submitted            TxStatus = 0
	TxStatus_Pending              TxStatus = 1
	TxStatus_Created              TxStatus = 2
	TxStatus_InQueue              TxStatus = 3
	TxStatus_WaitingConfirmations TxStatus = 4
	TxStatus_Confirming           TxStatus = 5
	TxStatus_Confirmed            TxStatus = 6
	TxStatus_Cancelled            TxStatus = 7
)

// Enum value maps for TxStatus.
var (
	TxStatus_name = map[int32]string{
		0: "Submitted",
		1: "Pending",
		2: "Created",
		3: "InQueue",
		4: "WaitingConfirmations",
		5: "Confirming",
		6: "Confirmed",
		7: "Cancelled",
	}
	TxStatus_value = map[string]int32{
		"Submitted":            0,
		"Pending":              1,
		"Created":              2,
		"InQueue":              3,
		"WaitingConfirmations": 4,
		"Confirming":           5,
		"Confirmed":            6,
		"Cancelled":            7,
	}
)

func (x TxStatus) Enum() *TxStatus {
	p := new(TxStatus)
	*p = x
	return p
}

func (x TxStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_quantos_pkg_v1_bank_proto_enumTypes[0].Descriptor()
}

func (TxStatus) Type() protoreflect.EnumType {
	return &file_quantos_pkg_v1_bank_proto_enumTypes[0]
}

func (x TxStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxStatus.Descriptor instead.
func (TxStatus) EnumDescriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{0}
}

type TxReqType int32

const (
	TxReqType_SendAmount  TxReqType = 0
	TxReqType_ContentHash TxReqType = 1
	TxReqType_TxInfo      TxReqType = 2
	TxReqType_TxReceipt   TxReqType = 3
	TxReqType_Contract    TxReqType = 4
	TxReqType_Status      TxReqType = 5
)

// Enum value maps for TxReqType.
var (
	TxReqType_name = map[int32]string{
		0: "SendAmount",
		1: "ContentHash",
		2: "TxInfo",
		3: "TxReceipt",
		4: "Contract",
		5: "Status",
	}
	TxReqType_value = map[string]int32{
		"SendAmount":  0,
		"ContentHash": 1,
		"TxInfo":      2,
		"TxReceipt":   3,
		"Contract":    4,
		"Status":      5,
	}
)

func (x TxReqType) Enum() *TxReqType {
	p := new(TxReqType)
	*p = x
	return p
}

func (x TxReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TxReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_quantos_pkg_v1_bank_proto_enumTypes[1].Descriptor()
}

func (TxReqType) Type() protoreflect.EnumType {
	return &file_quantos_pkg_v1_bank_proto_enumTypes[1]
}

func (x TxReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TxReqType.Descriptor instead.
func (TxReqType) EnumDescriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{1}
}

type DefaultCurrencyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From    string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol  string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Network []byte `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *DefaultCurrencyRequest) Reset() {
	*x = DefaultCurrencyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCurrencyRequest) ProtoMessage() {}

func (x *DefaultCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCurrencyRequest.ProtoReflect.Descriptor instead.
func (*DefaultCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{0}
}

func (x *DefaultCurrencyRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DefaultCurrencyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DefaultCurrencyRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *DefaultCurrencyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DefaultCurrencyRequest) GetNetwork() []byte {
	if x != nil {
		return x.Network
	}
	return nil
}

type DefaultCurrencyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To       string        `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Response *CurrencyInfo `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *DefaultCurrencyResponse) Reset() {
	*x = DefaultCurrencyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCurrencyResponse) ProtoMessage() {}

func (x *DefaultCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCurrencyResponse.ProtoReflect.Descriptor instead.
func (*DefaultCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{1}
}

func (x *DefaultCurrencyResponse) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *DefaultCurrencyResponse) GetResponse() *CurrencyInfo {
	if x != nil {
		return x.Response
	}
	return nil
}

type CurrencyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol       string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Coinbase     string `protobuf:"bytes,3,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	Circulating  uint64 `protobuf:"varint,4,opt,name=circulating,proto3" json:"circulating,omitempty"`
	Available    uint64 `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	MaxAvailable uint64 `protobuf:"varint,6,opt,name=max_available,json=maxAvailable,proto3" json:"max_available,omitempty"`
	ValueUsd     uint64 `protobuf:"varint,7,opt,name=value_usd,json=valueUsd,proto3" json:"value_usd,omitempty"`
	Signature    string `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Network      []byte `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
}

func (x *CurrencyInfo) Reset() {
	*x = CurrencyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyInfo) ProtoMessage() {}

func (x *CurrencyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyInfo.ProtoReflect.Descriptor instead.
func (*CurrencyInfo) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{2}
}

func (x *CurrencyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CurrencyInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *CurrencyInfo) GetCoinbase() string {
	if x != nil {
		return x.Coinbase
	}
	return ""
}

func (x *CurrencyInfo) GetCirculating() uint64 {
	if x != nil {
		return x.Circulating
	}
	return 0
}

func (x *CurrencyInfo) GetAvailable() uint64 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *CurrencyInfo) GetMaxAvailable() uint64 {
	if x != nil {
		return x.MaxAvailable
	}
	return 0
}

func (x *CurrencyInfo) GetValueUsd() uint64 {
	if x != nil {
		return x.ValueUsd
	}
	return 0
}

func (x *CurrencyInfo) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *CurrencyInfo) GetNetwork() []byte {
	if x != nil {
		return x.Network
	}
	return nil
}

type BankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	DefaultCoin *CurrencyInfo          `protobuf:"bytes,2,opt,name=default_coin,json=defaultCoin,proto3" json:"default_coin,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Minter      *MinterBurner          `protobuf:"bytes,4,opt,name=minter,proto3" json:"minter,omitempty"`
	Swappers    []*Swapper             `protobuf:"bytes,5,rep,name=swappers,proto3" json:"swappers,omitempty"`
}

func (x *BankInfo) Reset() {
	*x = BankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankInfo) ProtoMessage() {}

func (x *BankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankInfo.ProtoReflect.Descriptor instead.
func (*BankInfo) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{3}
}

func (x *BankInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BankInfo) GetDefaultCoin() *CurrencyInfo {
	if x != nil {
		return x.DefaultCoin
	}
	return nil
}

func (x *BankInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *BankInfo) GetMinter() *MinterBurner {
	if x != nil {
		return x.Minter
	}
	return nil
}

func (x *BankInfo) GetSwappers() []*Swapper {
	if x != nil {
		return x.Swappers
	}
	return nil
}

type Swapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address         string          `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BridgeAddress   string          `protobuf:"bytes,2,opt,name=bridge_address,json=bridgeAddress,proto3" json:"bridge_address,omitempty"`
	ContractAddress string          `protobuf:"bytes,3,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	CanSwap         []*CurrencyInfo `protobuf:"bytes,4,rep,name=can_swap,json=canSwap,proto3" json:"can_swap,omitempty"`
}

func (x *Swapper) Reset() {
	*x = Swapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Swapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Swapper) ProtoMessage() {}

func (x *Swapper) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Swapper.ProtoReflect.Descriptor instead.
func (*Swapper) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{4}
}

func (x *Swapper) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Swapper) GetBridgeAddress() string {
	if x != nil {
		return x.BridgeAddress
	}
	return ""
}

func (x *Swapper) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Swapper) GetCanSwap() []*CurrencyInfo {
	if x != nil {
		return x.CanSwap
	}
	return nil
}

type MinterBurner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	TotalMinted uint64 `protobuf:"varint,2,opt,name=total_minted,json=totalMinted,proto3" json:"total_minted,omitempty"`
	TotalBurned uint64 `protobuf:"varint,3,opt,name=total_burned,json=totalBurned,proto3" json:"total_burned,omitempty"`
}

func (x *MinterBurner) Reset() {
	*x = MinterBurner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinterBurner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinterBurner) ProtoMessage() {}

func (x *MinterBurner) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinterBurner.ProtoReflect.Descriptor instead.
func (*MinterBurner) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{5}
}

func (x *MinterBurner) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MinterBurner) GetTotalMinted() uint64 {
	if x != nil {
		return x.TotalMinted
	}
	return 0
}

func (x *MinterBurner) GetTotalBurned() uint64 {
	if x != nil {
		return x.TotalBurned
	}
	return 0
}

type TxQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidatorPool []string          `protobuf:"bytes,1,rep,name=validatorPool,proto3" json:"validatorPool,omitempty"`
	Elements      []*TxQueueElement `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
}

func (x *TxQueue) Reset() {
	*x = TxQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxQueue) ProtoMessage() {}

func (x *TxQueue) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxQueue.ProtoReflect.Descriptor instead.
func (*TxQueue) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{6}
}

func (x *TxQueue) GetValidatorPool() []string {
	if x != nil {
		return x.ValidatorPool
	}
	return nil
}

func (x *TxQueue) GetElements() []*TxQueueElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

type TxQueueElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce       int64    `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Transaction *Tx      `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Status      TxStatus `protobuf:"varint,3,opt,name=status,proto3,enum=quantos.pkg.v1.TxStatus" json:"status,omitempty"`
}

func (x *TxQueueElement) Reset() {
	*x = TxQueueElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxQueueElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxQueueElement) ProtoMessage() {}

func (x *TxQueueElement) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxQueueElement.ProtoReflect.Descriptor instead.
func (*TxQueueElement) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{7}
}

func (x *TxQueueElement) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *TxQueueElement) GetTransaction() *Tx {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TxQueueElement) GetStatus() TxStatus {
	if x != nil {
		return x.Status
	}
	return TxStatus_Submitted
}

type Tx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount          uint64        `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	From            string        `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To              string        `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Fees            uint64        `protobuf:"varint,4,opt,name=fees,proto3" json:"fees,omitempty"`
	TxId            string        `protobuf:"bytes,5,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Signatures      []string      `protobuf:"bytes,6,rep,name=signatures,proto3" json:"signatures,omitempty"`
	MerkleRoot      []byte        `protobuf:"bytes,7,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	ContractAddress string        `protobuf:"bytes,8,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Notes           string        `protobuf:"bytes,9,opt,name=notes,proto3" json:"notes,omitempty"`
	Ref             string        `protobuf:"bytes,10,opt,name=ref,proto3" json:"ref,omitempty"`
	Currency        *CurrencyInfo `protobuf:"bytes,11,opt,name=currency,proto3" json:"currency,omitempty"`
	Nonce           int64         `protobuf:"varint,12,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Tx) Reset() {
	*x = Tx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tx) ProtoMessage() {}

func (x *Tx) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tx.ProtoReflect.Descriptor instead.
func (*Tx) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{8}
}

func (x *Tx) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Tx) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Tx) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Tx) GetFees() uint64 {
	if x != nil {
		return x.Fees
	}
	return 0
}

func (x *Tx) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Tx) GetSignatures() []string {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *Tx) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *Tx) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *Tx) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *Tx) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *Tx) GetCurrency() *CurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *Tx) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type TxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromAddress string    `protobuf:"bytes,1,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	RequestType TxReqType `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=quantos.pkg.v1.TxReqType" json:"request_type,omitempty"`
}

func (x *TxRequest) Reset() {
	*x = TxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxRequest) ProtoMessage() {}

func (x *TxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxRequest.ProtoReflect.Descriptor instead.
func (*TxRequest) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{9}
}

func (x *TxRequest) GetFromAddress() string {
	if x != nil {
		return x.FromAddress
	}
	return ""
}

func (x *TxRequest) GetRequestType() TxReqType {
	if x != nil {
		return x.RequestType
	}
	return TxReqType_SendAmount
}

type TxSendAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request   *TxRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Amount    uint64     `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	To        string     `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Signature string     `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *TxSendAmountRequest) Reset() {
	*x = TxSendAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxSendAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxSendAmountRequest) ProtoMessage() {}

func (x *TxSendAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxSendAmountRequest.ProtoReflect.Descriptor instead.
func (*TxSendAmountRequest) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{10}
}

func (x *TxSendAmountRequest) GetRequest() *TxRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *TxSendAmountRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TxSendAmountRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TxSendAmountRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type Fees struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxSize int64  `protobuf:"varint,2,opt,name=tx_size,json=txSize,proto3" json:"tx_size,omitempty"`
	Total  uint64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Paid   bool   `protobuf:"varint,4,opt,name=paid,proto3" json:"paid,omitempty"`
}

func (x *Fees) Reset() {
	*x = Fees{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fees) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fees) ProtoMessage() {}

func (x *Fees) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fees.ProtoReflect.Descriptor instead.
func (*Fees) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{11}
}

func (x *Fees) GetTxSize() int64 {
	if x != nil {
		return x.TxSize
	}
	return 0
}

func (x *Fees) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *Fees) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs     []*TxInput  `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs    []*TxOutput `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	TxStatus   TxStatus    `protobuf:"varint,3,opt,name=tx_status,json=txStatus,proto3,enum=quantos.pkg.v1.TxStatus" json:"tx_status,omitempty"`
	Validators []string    `protobuf:"bytes,4,rep,name=validators,proto3" json:"validators,omitempty"`
	Scripts    []string    `protobuf:"bytes,5,rep,name=scripts,proto3" json:"scripts,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{12}
}

func (x *TransactionInfo) GetInputs() []*TxInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *TransactionInfo) GetOutputs() []*TxOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *TransactionInfo) GetTxStatus() TxStatus {
	if x != nil {
		return x.TxStatus
	}
	return TxStatus_Submitted
}

func (x *TransactionInfo) GetValidators() []string {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *TransactionInfo) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type TxInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxType   TxReqType     `protobuf:"varint,1,opt,name=tx_type,json=txType,proto3,enum=quantos.pkg.v1.TxReqType" json:"tx_type,omitempty"`
	From     string        `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Value    uint64        `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	To       string        `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Currency *CurrencyInfo `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Spent    bool          `protobuf:"varint,6,opt,name=spent,proto3" json:"spent,omitempty"`
}

func (x *TxInput) Reset() {
	*x = TxInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInput) ProtoMessage() {}

func (x *TxInput) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInput.ProtoReflect.Descriptor instead.
func (*TxInput) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{13}
}

func (x *TxInput) GetTxType() TxReqType {
	if x != nil {
		return x.TxType
	}
	return TxReqType_SendAmount
}

func (x *TxInput) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TxInput) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TxInput) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TxInput) GetCurrency() *CurrencyInfo {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *TxInput) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

type TxOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId    string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Address string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Value   uint64   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Fees    *Fees    `protobuf:"bytes,4,opt,name=fees,proto3" json:"fees,omitempty"`
	Input   *TxInput `protobuf:"bytes,6,opt,name=input,proto3" json:"input,omitempty"`
}

func (x *TxOutput) Reset() {
	*x = TxOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutput) ProtoMessage() {}

func (x *TxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutput.ProtoReflect.Descriptor instead.
func (*TxOutput) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{14}
}

func (x *TxOutput) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TxOutput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TxOutput) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TxOutput) GetFees() *Fees {
	if x != nil {
		return x.Fees
	}
	return nil
}

func (x *TxOutput) GetInput() *TxInput {
	if x != nil {
		return x.Input
	}
	return nil
}

type RequestTxQueueElements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Status TxStatus `protobuf:"varint,2,opt,name=status,proto3,enum=quantos.pkg.v1.TxStatus" json:"status,omitempty"`
}

func (x *RequestTxQueueElements) Reset() {
	*x = RequestTxQueueElements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quantos_pkg_v1_bank_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTxQueueElements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTxQueueElements) ProtoMessage() {}

func (x *RequestTxQueueElements) ProtoReflect() protoreflect.Message {
	mi := &file_quantos_pkg_v1_bank_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTxQueueElements.ProtoReflect.Descriptor instead.
func (*RequestTxQueueElements) Descriptor() ([]byte, []int) {
	return file_quantos_pkg_v1_bank_proto_rawDescGZIP(), []int{15}
}

func (x *RequestTxQueueElements) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RequestTxQueueElements) GetStatus() TxStatus {
	if x != nil {
		return x.Status
	}
	return TxStatus_Submitted
}

var File_quantos_pkg_v1_bank_proto protoreflect.FileDescriptor

var file_quantos_pkg_v1_bank_proto_rawDesc = []byte{
	0x0a, 0x19, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x63, 0x0a, 0x17, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x90, 0x02, 0x0a, 0x0c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x69, 0x72, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x69, 0x72, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x61, 0x78,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x75, 0x73, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x55, 0x73, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x22, 0x8a,
	0x02, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x34, 0x0a, 0x06, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x72, 0x52, 0x06,
	0x6d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x77, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x77, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x52, 0x08, 0x73, 0x77, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x07,
	0x53, 0x77, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x53, 0x77, 0x61, 0x70, 0x22, 0x6e, 0x0a, 0x0c,
	0x4d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x62, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x22, 0x6b, 0x0a, 0x07,
	0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x3a, 0x0a,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x54, 0x78,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x52, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x02, 0x54,
	0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x66, 0x65, 0x65,
	0x73, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65,
	0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x6c, 0x0a, 0x09, 0x54, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x54, 0x78, 0x53,
	0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x49, 0x0a, 0x04, 0x46,
	0x65, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x78, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x22, 0xe7, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12,
	0x35, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x74, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73,
	0x22, 0xc7, 0x01, 0x0a, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x32, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x74, 0x78, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x08, 0x54,
	0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x04,
	0x66, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x65, 0x73,
	0x52, 0x04, 0x66, 0x65, 0x65, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x5e, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2a, 0x88, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x10,
	0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x69, 0x6e, 0x67,
	0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x10,
	0x06, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x10, 0x07,
	0x2a, 0x61, 0x0a, 0x09, 0x54, 0x78, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x78,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x10, 0x05, 0x32, 0xa3, 0x02, 0x0a, 0x04, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x62, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x57, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5e, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x26, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x1e, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f,
	0x73, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x30, 0x01, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x6f, 0x73, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x64, 0x65, 0x76, 0x2d, 0x30, 0x2e, 0x31, 0x2e, 0x30,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_quantos_pkg_v1_bank_proto_rawDescOnce sync.Once
	file_quantos_pkg_v1_bank_proto_rawDescData = file_quantos_pkg_v1_bank_proto_rawDesc
)

func file_quantos_pkg_v1_bank_proto_rawDescGZIP() []byte {
	file_quantos_pkg_v1_bank_proto_rawDescOnce.Do(func() {
		file_quantos_pkg_v1_bank_proto_rawDescData = protoimpl.X.CompressGZIP(file_quantos_pkg_v1_bank_proto_rawDescData)
	})
	return file_quantos_pkg_v1_bank_proto_rawDescData
}

var file_quantos_pkg_v1_bank_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_quantos_pkg_v1_bank_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_quantos_pkg_v1_bank_proto_goTypes = []interface{}{
	(TxStatus)(0),                   // 0: quantos.pkg.v1.TxStatus
	(TxReqType)(0),                  // 1: quantos.pkg.v1.TxReqType
	(*DefaultCurrencyRequest)(nil),  // 2: quantos.pkg.v1.DefaultCurrencyRequest
	(*DefaultCurrencyResponse)(nil), // 3: quantos.pkg.v1.DefaultCurrencyResponse
	(*CurrencyInfo)(nil),            // 4: quantos.pkg.v1.CurrencyInfo
	(*BankInfo)(nil),                // 5: quantos.pkg.v1.BankInfo
	(*Swapper)(nil),                 // 6: quantos.pkg.v1.Swapper
	(*MinterBurner)(nil),            // 7: quantos.pkg.v1.MinterBurner
	(*TxQueue)(nil),                 // 8: quantos.pkg.v1.TxQueue
	(*TxQueueElement)(nil),          // 9: quantos.pkg.v1.TxQueueElement
	(*Tx)(nil),                      // 10: quantos.pkg.v1.Tx
	(*TxRequest)(nil),               // 11: quantos.pkg.v1.TxRequest
	(*TxSendAmountRequest)(nil),     // 12: quantos.pkg.v1.TxSendAmountRequest
	(*Fees)(nil),                    // 13: quantos.pkg.v1.Fees
	(*TransactionInfo)(nil),         // 14: quantos.pkg.v1.TransactionInfo
	(*TxInput)(nil),                 // 15: quantos.pkg.v1.TxInput
	(*TxOutput)(nil),                // 16: quantos.pkg.v1.TxOutput
	(*RequestTxQueueElements)(nil),  // 17: quantos.pkg.v1.RequestTxQueueElements
	(*timestamppb.Timestamp)(nil),   // 18: google.protobuf.Timestamp
}
var file_quantos_pkg_v1_bank_proto_depIdxs = []int32{
	4,  // 0: quantos.pkg.v1.DefaultCurrencyResponse.response:type_name -> quantos.pkg.v1.CurrencyInfo
	4,  // 1: quantos.pkg.v1.BankInfo.default_coin:type_name -> quantos.pkg.v1.CurrencyInfo
	18, // 2: quantos.pkg.v1.BankInfo.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 3: quantos.pkg.v1.BankInfo.minter:type_name -> quantos.pkg.v1.MinterBurner
	6,  // 4: quantos.pkg.v1.BankInfo.swappers:type_name -> quantos.pkg.v1.Swapper
	4,  // 5: quantos.pkg.v1.Swapper.can_swap:type_name -> quantos.pkg.v1.CurrencyInfo
	9,  // 6: quantos.pkg.v1.TxQueue.elements:type_name -> quantos.pkg.v1.TxQueueElement
	10, // 7: quantos.pkg.v1.TxQueueElement.transaction:type_name -> quantos.pkg.v1.Tx
	0,  // 8: quantos.pkg.v1.TxQueueElement.status:type_name -> quantos.pkg.v1.TxStatus
	4,  // 9: quantos.pkg.v1.Tx.currency:type_name -> quantos.pkg.v1.CurrencyInfo
	1,  // 10: quantos.pkg.v1.TxRequest.request_type:type_name -> quantos.pkg.v1.TxReqType
	11, // 11: quantos.pkg.v1.TxSendAmountRequest.request:type_name -> quantos.pkg.v1.TxRequest
	15, // 12: quantos.pkg.v1.TransactionInfo.inputs:type_name -> quantos.pkg.v1.TxInput
	16, // 13: quantos.pkg.v1.TransactionInfo.outputs:type_name -> quantos.pkg.v1.TxOutput
	0,  // 14: quantos.pkg.v1.TransactionInfo.tx_status:type_name -> quantos.pkg.v1.TxStatus
	1,  // 15: quantos.pkg.v1.TxInput.tx_type:type_name -> quantos.pkg.v1.TxReqType
	4,  // 16: quantos.pkg.v1.TxInput.currency:type_name -> quantos.pkg.v1.CurrencyInfo
	13, // 17: quantos.pkg.v1.TxOutput.fees:type_name -> quantos.pkg.v1.Fees
	15, // 18: quantos.pkg.v1.TxOutput.input:type_name -> quantos.pkg.v1.TxInput
	0,  // 19: quantos.pkg.v1.RequestTxQueueElements.status:type_name -> quantos.pkg.v1.TxStatus
	2,  // 20: quantos.pkg.v1.Bank.GetCurrencyInfo:input_type -> quantos.pkg.v1.DefaultCurrencyRequest
	12, // 21: quantos.pkg.v1.Bank.SendTransaction:input_type -> quantos.pkg.v1.TxSendAmountRequest
	17, // 22: quantos.pkg.v1.Bank.GetTxQueueElements:input_type -> quantos.pkg.v1.RequestTxQueueElements
	3,  // 23: quantos.pkg.v1.Bank.GetCurrencyInfo:output_type -> quantos.pkg.v1.DefaultCurrencyResponse
	14, // 24: quantos.pkg.v1.Bank.SendTransaction:output_type -> quantos.pkg.v1.TransactionInfo
	9,  // 25: quantos.pkg.v1.Bank.GetTxQueueElements:output_type -> quantos.pkg.v1.TxQueueElement
	23, // [23:26] is the sub-list for method output_type
	20, // [20:23] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_quantos_pkg_v1_bank_proto_init() }
func file_quantos_pkg_v1_bank_proto_init() {
	if File_quantos_pkg_v1_bank_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quantos_pkg_v1_bank_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCurrencyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCurrencyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Swapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinterBurner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxQueueElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxSendAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fees); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quantos_pkg_v1_bank_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTxQueueElements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quantos_pkg_v1_bank_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quantos_pkg_v1_bank_proto_goTypes,
		DependencyIndexes: file_quantos_pkg_v1_bank_proto_depIdxs,
		EnumInfos:         file_quantos_pkg_v1_bank_proto_enumTypes,
		MessageInfos:      file_quantos_pkg_v1_bank_proto_msgTypes,
	}.Build()
	File_quantos_pkg_v1_bank_proto = out.File
	file_quantos_pkg_v1_bank_proto_rawDesc = nil
	file_quantos_pkg_v1_bank_proto_goTypes = nil
	file_quantos_pkg_v1_bank_proto_depIdxs = nil
}
